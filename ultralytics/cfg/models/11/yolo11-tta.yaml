# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11 object detection model with Adaptors and P3/8 - P5/32 outputs
# Intended for use with Test-Time Adaptation (TTA).
# Adaptor layers are added for potential parameter-efficient TTA.
# TTA typically adapts Batch Normalization (BN) layers within modules like Conv, C3k2, Adaptor, etc.
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect
# TTA Info: TTA is enabled via training args (calculate_tta_stats=True) and prediction/validation settings.

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n-tta.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  # Note: Summary stats below are estimates after adding Adaptors, recalculate for accuracy.
  n: [0.50, 0.25, 1024] # summary: ~197 layers, ~2.7M parameters, ~6.7 GFLOPs
  s: [0.50, 0.50, 1024] # summary: ~197 layers, ~9.6M parameters, ~21.8 GFLOPs
  m: [0.50, 1.00, 512] # summary: ~247 layers, ~20.3M parameters, ~68.6 GFLOPs
  l: [1.00, 1.00, 512] # summary: ~373 layers, ~25.6M parameters, ~87.7 GFLOPs
  x: [1.00, 1.50, 512] # summary: ~373 layers, ~57.2M parameters, ~196.1 GFLOPs

# YOLO11n backbone with Adaptors
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]] # 2
  - [-1, 1, Adaptor, [256, 32, True]] # 3 (Added after layer 2)
  - [-1, 1, Conv, [256, 3, 2]] # 4-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]] # 5
  - [-1, 1, Adaptor, [512, 32, True]] # 6 (Added after layer 5)
  - [-1, 1, Conv, [512, 3, 2]] # 7-P4/16
  - [-1, 2, C3k2, [512, True]] # 8
  - [-1, 1, Adaptor, [512, 32, True]] # 9 (Added after layer 8)
  - [-1, 1, Conv, [1024, 3, 2]] # 10-P5/32
  - [-1, 2, C3k2, [1024, True]] # 11
  - [-1, 1, Adaptor, [1024, 32, True]] # 12 (Added after layer 11)
  - [-1, 1, SPPF, [1024, 5]] # 13
  - [-1, 2, C2PSA, [1024]] # 14

# YOLO11n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 15
  - [[-1, 9], 1, Concat, [1]] # 16 cat backbone P4 (layer 9 is C3k2 output before Adaptor)
  - [-1, 2, C3k2, [512, False]] # 17

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 18
  - [[-1, 6], 1, Concat, [1]] # 19 cat backbone P3 (layer 6 is C3k2 output before Adaptor)
  - [-1, 2, C3k2, [256, False]] # 20 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]] # 21
  - [[-1, 17], 1, Concat, [1]] # 22 cat head P4
  - [-1, 2, C3k2, [512, False]] # 23 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]] # 24
  - [[-1, 14], 1, Concat, [1]] # 25 cat head P5 (layer 14 is C2PSA output)
  - [-1, 2, C3k2, [1024, True]] # 26 (P5/32-large)

  - [[20, 23, 26], 1, Detect, [nc]] # Detect(P3, P4, P5)
